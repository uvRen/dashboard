"use strict";function initialize(e){return function(t){return _store.getLifeCyclePolicy(e).then(function(n){t(_reduxBatchEnhancer.batchActions([{type:_ACTION_TYPES.LCM_ACTIONS.INITIALIZE,storeName:e},setModel(n)]))})}}function setIsDirty(){return{type:_ACTION_TYPES.LCM_ACTIONS.IS_DIRTY}}function setIsNotDirty(){return{type:_ACTION_TYPES.LCM_ACTIONS.IS_NOT_DIRTY}}function closeAll(){return{type:_ACTION_TYPES.LCM_ACTIONS.CLOSE_ALL}}function setModel(e){return{type:_ACTION_TYPES.LCM_ACTIONS.SET_DATA,data:e}}function toggleExecute(e){return _reduxBatchEnhancer.batchActions([{type:_ACTION_TYPES.LCM_ACTIONS.TOGGLE_EXECUTE,operation:e},setIsDirty()])}function changeInterval(e){return _reduxBatchEnhancer.batchActions([{type:_ACTION_TYPES.LCM_ACTIONS.CHANGE_INTERVAL,value:e},setIsDirty()])}function changeSchedule(e,t){return _reduxBatchEnhancer.batchActions([{type:_ACTION_TYPES.LCM_ACTIONS.CHANGE_SCHEDULE,operation:e,value:t},setIsDirty()])}function changeTime(e,t){return _reduxBatchEnhancer.batchActions([{type:_ACTION_TYPES.LCM_ACTIONS.CHANGE_TIME,operation:e,value:t},setIsDirty()])}function toggleResetContentDialog(){return{type:_ACTION_TYPES.LCM_ACTIONS.TOGGLE_RESET_CONTENT_DIALOG}}function toggleCloseContentDialog(){return{type:_ACTION_TYPES.LCM_ACTIONS.TOGGLE_CLOSE_CONTENT_DIALOG}}function toggleSaveContentDialog(){return{type:_ACTION_TYPES.LCM_ACTIONS.TOGGLE_SAVE_CONTENT_DIALOG}}function resetData(e){return function(t){return _store.getLifeCyclePolicy(e).then(function(e){return t(_reduxBatchEnhancer.batchActions([setModel(e),setIsNotDirty(),closeAll()]))})}}function saveChanges(e){return function(t){return _store.updateLifeCyclePolicy(e.model.toJS()).then(function(){return t(_reduxBatchEnhancer.batchActions([setIsNotDirty(),closeAll()]))})}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.initialize=initialize,exports.setIsDirty=setIsDirty,exports.setIsNotDirty=setIsNotDirty,exports.closeAll=closeAll,exports.setModel=setModel,exports.toggleExecute=toggleExecute,exports.changeInterval=changeInterval,exports.changeSchedule=changeSchedule,exports.changeTime=changeTime,exports.toggleResetContentDialog=toggleResetContentDialog,exports.toggleCloseContentDialog=toggleCloseContentDialog,exports.toggleSaveContentDialog=toggleSaveContentDialog,exports.resetData=resetData,exports.saveChanges=saveChanges;var _ACTION_TYPES=require("../infrastructure/ACTION_TYPES"),_reduxBatchEnhancer=require("redux-batch-enhancer"),_store=require("inovia-api-client/insight/rtc/store");